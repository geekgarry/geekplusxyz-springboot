<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maike.webapp.function.mapper.ChatgptLogMapper">

    <resultMap type="ChatgptLog" id="ChatgptLogResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="userIp"    column="user_ip"    />
        <result property="userMac"    column="user_mac"    />
        <result property="createTime"    column="create_time"    />
        <result property="chatContent"    column="chat_content"    />
    </resultMap>

    <sql id="selectChatgptLogVo">
        select id, user_id, user_name, user_ip, user_mac, create_time, chat_content from chatgpt_log
    </sql>

    <select id="selectChatgptLogList" parameterType="ChatgptLog" resultMap="ChatgptLogResult">
        <include refid="selectChatgptLogVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="userIp != null  and userIp != ''"> and user_ip = #{userIp}</if>
            <if test="userMac != null  and userMac != ''"> and user_mac = #{userMac}</if>
            <if test="chatContent != null  and chatContent != ''"> and chat_content = #{chatContent}</if>
        </where>
    </select>

    <select id="selectChatgptLogById" parameterType="Long" resultMap="ChatgptLogResult">
        <include refid="selectChatgptLogVo"/>
        where id = #{id}
    </select>

    <insert id="insertChatgptLog" parameterType="ChatgptLog" useGeneratedKeys="true" keyProperty="id">
        insert into chatgpt_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="userIp != null">user_ip,</if>
            <if test="userMac != null">user_mac,</if>
            <if test="createTime != null">create_time,</if>
            <if test="chatContent != null">chat_content,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="userIp != null">#{userIp},</if>
            <if test="userMac != null">#{userMac},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="chatContent != null">#{chatContent},</if>
         </trim>
    </insert>

    <update id="updateChatgptLog" parameterType="ChatgptLog">
        update chatgpt_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="userIp != null">user_ip = #{userIp},</if>
            <if test="userMac != null">user_mac = #{userMac},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="chatContent != null">chat_content = #{chatContent},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteChatgptLogById" parameterType="Long">
        delete from chatgpt_log where id = #{id}
    </delete>

    <delete id="deleteChatgptLogByIds" parameterType="String">
        delete from chatgpt_log where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="removeAll">
        #正序排序后删除表中前35条记录
        DELETE FROM chatgpt_log order by id asc limit 35;
    </delete>

</mapper>
